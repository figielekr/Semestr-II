/*Zadanie 12 Scalanie

Proszę dokonać scalenia dwóch wektorów, umieszczając wyniki w trzecim. Scalenie polega na zapisaniu wartości wektorów z zachowaniem uporządkowania.
Wynik działania programu dla poniższych wektorów:
int[] wek = {13,57,89,95};
int[] wek1 = {25,56,58,67,69,70,76};

powinien zatem wyglądać następująco: 13 25 56 57 58 67 69 70 76 89 95

Program powinien oczywiście działać  dla dowolnych długości wektorów (pierwszy może być dłuższy od drugiego i odwrotnie, mogą mieć też taką samą długość – ale każdy jest wypełniony do
końca liczbami) i kombinacji ich wartości.
Zakładamy że obydwa wektory wejściowe są posortowane rosnąco a wektor wynikowy jest na pewno dłuższy  niż suma ich długości (nie trzeba już tego sprawdzać, choć można wprowadzić taki
bezpiecznik).
Można to zadanie rozwiązać zapisując obydwa wektory w trzecim i sortując go. To nie jest właściwe rozwiązanie - wynik będzie dobry ale jest to skrajnie nieefektywne; skoro oba
wektory są posortowane, trzeba to wykorzystać.
Można też szukać najmniejszego elementu z obydwu wektorów i po znalezieniu zapisywać go w wynikowym (a w miejscu znalezienia kasować - zastępować maxint czy jakoś tak). To też
nie jest właściwe rozwiązanie.
Właściwy algorytm polega na tym że odczytujemy po jednym elemencie z każdego wektora i mniejszy z nich zapisujemy w wynikowym. Nic tu nie trzeba kasować (pamiętać tylko co
przeczytaliśmy) i działamy szybko.
Algorytm jest prosty i wypada go znać.*/
 //if (w==wek1.length){print1=false;bwek=true;bwek1=false;}
// else if (b==a){wek2[i]=a; i++; wek2[i]=b; bwek=true;bwek1=true;}
public class zad12
{
    public static void main(String[] args) {
        int[] wek = {13,57,89,95,108,116};
        int[] wek1 = {25,56,58,67,69,70,76,107};
        int[] wek2 = new int[wek.length+wek1.length];           //utworzenie nowego wektora o rozmiarze pierwszego i drugiego
        int x=0, y=0;
        //if (wek.length>wek1.length){x = wek1.length;}
        //else if (wek.length==wek1.length){x=wek.length;}
        //else{x = wek.length;}

        int a=0,b=wek[0],q=0,w=0,temporaryA=0,temporaryB=0;
        boolean krotszy = true, dluzszy=true, found = true, print2=true;

        for (int i =0; i < wek2.length; i++ ){
            //q=0;w=0;
            found=true;
            while(found){
                if(q==wek.length){
                    x*=3;
                    break;
                }
                if(wek[q]>a){
                    x=wek[q];
                    found=false;
                }
                else q++;
            }
            found=true;
            while(found){
                if(w==wek1.length){
                    y*=3;
                    break;
                }
                if(wek1[w]>a){
                    y=wek1[w];
                    found=false;
                }
                else w++;
            }
            if(x>y){
                wek2[i]=y;
                System.out.print(wek2[i]+" ");
                a=y;
            }
            else {wek2[i]=x; a=x;System.out.print(wek2[i]+" ");}
        }
    }
}
